buildscript {
	ext {
		kotlinVersion = '1.1.1'
        dokkaVersion = '0.9.13'
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}"
	}
}

subprojects {

	apply plugin: 'kotlin'
	apply plugin: 'eclipse'

	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
    sourceSets.main.kotlin.exclude 'sample/**'

	ext {
		wicketVersion = '8.0.0-M5'
		wicketstuffVersion = wicketVersion
		wicketBootstrapVersion = '2.0.0-M2'
        servletApiVersion = '3.1.0'
		springVersion = '4.3.8.RELEASE'
	}

	compileKotlin {
		kotlinOptions.jvmTarget = sourceCompatibility
	}
	compileTestKotlin {
		kotlinOptions.jvmTarget = sourceCompatibility
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly("org.apache.wicket:wicket-core:${wicketVersion}")
		compileOnly("org.apache.wicket:wicket-extensions:${wicketVersion}")
		compileOnly("org.apache.wicket:wicket-spring:${wicketVersion}")
        compileOnly("org.wicketstuff:wicketstuff-annotation:${wicketstuffVersion}")
        compileOnly("javax.servlet:javax.servlet-api:${servletApiVersion}")
		compileOnly("org.springframework:spring-web:${springVersion}")
        compileOnly("de.agilecoders.wicket:wicket-bootstrap-core:${wicketBootstrapVersion}")
		compileOnly("org.wicketstuff:wicketstuff-annotationeventdispatcher:${wicketstuffVersion}")
		compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
		compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        //testCompile("org.apache.wicket:wicket-core:${wicketVersion}")
	}

}

project(':kwicket') {

	apply plugin: 'org.jetbrains.dokka'

	sourceSets.main.kotlin.exclude 'samples/**'

	dokka {
		/*linkMapping {
			url = "https://kotlinlang.org/api/latest/jvm/stdlib/index.html"
			dir = "src/main/kotlin"
			suffix = "#K"
		}*/
		samples = ["src/main/kotlin/samples"]
	}
}

project(':sample') {

    apply plugin: 'kotlin-allopen'
    apply plugin: 'kotlin-spring'
	apply plugin: 'org.springframework.boot'

    sourceSets.main.resources.srcDir 'src/main/kotlin'

    dependencies {
        compile("org.apache.wicket:wicket-core:${wicketVersion}")
		compile("org.apache.wicket:wicket-spring:${wicketVersion}")
		compile("org.apache.wicket:wicket-extensions:${wicketVersion}")
        compile("javax.servlet:javax.servlet-api:${servletApiVersion}")
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
        compile("de.agilecoders.wicket:wicket-bootstrap-core:${wicketBootstrapVersion}")
		compile("de.agilecoders.wicket:wicket-bootstrap-extensions:${wicketBootstrapVersion}")
		compile("org.wicketstuff:wicketstuff-annotation:${wicketstuffVersion}")
		compile("org.wicketstuff:wicketstuff-annotationeventdispatcher:${wicketstuffVersion}")
		compile("org.reflections:reflections:0.9.11")
        runtime("com.h2database:h2")
        compile project(':kwicket')
    }
}
