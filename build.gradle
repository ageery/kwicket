buildscript {
    ext {
        kotlinVersion = '1.1.4-3'
        dokkaVersion = '0.9.15'
        bintrayVersion = '1.7.3'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayVersion}")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}")
    }
}

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'org.jetbrains.dokka'

    group = 'org.kwicket'
    version = '0.0.2-SNAPSHOT'
    sourceCompatibility = 1.8
    sourceSets.main.resources.srcDirs += "src/main/kotlin"

    ext {
        kotlinVersion = '1.1.4-3'
        wicketVersion = '8.0.0-M7'
        wicketStuffVersion = wicketVersion
        wicketBootstrapVersion = '2.0.0-M6'
        servletApiVersion = '3.1.0'
        springVersion = '4.3.11.RELEASE'
    }

    compileKotlin {
        kotlinOptions.jvmTarget = sourceCompatibility
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = sourceCompatibility
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly("org.apache.wicket:wicket-core:${wicketVersion}")
        compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
        compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'javadoc'
        outputDirectory = javadoc.destinationDir

        externalDocumentationLink {
            url = new URL("https://ci.apache.org/projects/wicket/apidocs/8.x/")
        }
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        publications = ['maven']
        publish = true
        pkg {
            repo = 'maven'
            name = 'kwicket'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/ageery/kwicket.git'
            githubRepo = 'ageery/kwicket'
            githubReleaseNotesFile = 'README.md'
            version {
                name = "${version}"
                vcsTag = "kwicket-${version}"
            }
        }
    }

}
